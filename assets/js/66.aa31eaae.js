(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{265:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("p",[s("strong",[t._v("Table of Contents")]),s("em",[t._v("generated with "),s("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocToc"),s("OutboundLink")],1)])]),t._m(0),s("p",[t._v("本文不会介绍 Git 的基本操作，会对一些高级操作进行说明。")]),t._m(1),t._m(2),t._m(3),t._m(4),t._m(5),t._m(6),s("p",[t._v("Rebase 对比 merge，优势在于合并后的结果很清晰，只有一条线，劣势在于如果一旦出现冲突，解决冲突很麻烦，可能要解决多个冲突，但是 merge 出现冲突只需要解决一次。")]),t._m(7),t._m(8),t._m(9),t._m(10),t._m(11),s("p",[t._v("使用该命令可以暂存你的工作目录，后面想恢复工作目录，只需要使用")]),t._m(12),s("p",[t._v("这样你之前临时保存的代码又回来了")]),t._m(13),t._m(14),t._m(15),t._m(16),t._m(17),t._m(18),t._m(19),s("p",[t._v("如果你想删除刚写的 commit，就可以通过以下命令实现")]),t._m(20),t._m(21)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("a",{attrs:{href:"#rebase-%E5%90%88%E5%B9%B6"}},[this._v("Rebase 合并")])]),e("li",[e("a",{attrs:{href:"#stash"}},[this._v("stash")])]),e("li",[e("a",{attrs:{href:"#reflog"}},[this._v("reflog")])]),e("li",[e("a",{attrs:{href:"#reset"}},[this._v("Reset")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"rebase-合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-合并","aria-hidden":"true"}},[this._v("#")]),this._v(" Rebase 合并")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("该命令可以让和 "),e("code",[this._v("merge")]),this._v(" 命令得到的结果基本是一致的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("通常使用 "),e("code",[this._v("merge")]),this._v(" 操作将分支上的代码合并到 "),e("code",[this._v("master")]),this._v(" 中，分支样子如下所示")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/4/23/162f109db27be054?w=505&h=461&f=png&s=22796",alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("使用 "),s("code",[t._v("rebase")]),t._v(" 后，会将 "),s("code",[t._v("develop")]),t._v(" 上的 "),s("code",[t._v("commit")]),t._v(" 按顺序移到 "),s("code",[t._v("master")]),t._v(" 的第三个 "),s("code",[t._v("commit")]),t._v(" 后面，分支样子如下所示")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/4/23/162f11cc2cb8b332?w=505&h=563&f=png&s=26514",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用 rebase 应该在需要被 rebase 的分支上操作，并且该分支是本地分支。如果 "),e("code",[this._v("develop")]),this._v(" 分支需要 rebase 到 "),e("code",[this._v("master")]),this._v(" 上去，那么应该如下操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("## branch develop\ngit rebase master\ngit checkout master\n## 用于将 `master` 上的 HEAD 移动到最新的 commit\ngit merge develop\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stash","aria-hidden":"true"}},[this._v("#")]),this._v(" stash")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("stash")]),this._v(" 用于临时报错工作目录的改动。开发中可能会遇到代码写一半需要切分支打包的问题，如果这时候你不想 "),e("code",[this._v("commit")]),this._v(" 的话，就可以使用该命令。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git stash\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git stash pop\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflog","aria-hidden":"true"}},[this._v("#")]),this._v(" reflog")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("reflog")]),this._v(" 可以看到 HEAD 的移动记录，假如之前误删了一个分支，可以通过 "),e("code",[this._v("git reflog")]),this._v(" 看到移动 HEAD 的哈希值")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/4/23/162f14df98ce3d83?w=950&h=118&f=png&s=77151",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("从图中可以看出，HEAD 的最后一次移动行为是 "),e("code",[this._v("merge")]),this._v(" 后，接下来分支 "),e("code",[this._v("new")]),this._v(" 就被删除了，那么我们可以通过以下命令找回 "),e("code",[this._v("new")]),this._v(" 分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout 37d9aca\ngit checkout -b new\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("PS："),e("code",[this._v("reflog")]),this._v(" 记录是时效的，只会保存一段时间内的记录。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset","aria-hidden":"true"}},[this._v("#")]),this._v(" Reset")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git reset --hard HEAD^\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("但是 "),e("code",[this._v("reset")]),this._v(" 的本质并不是删除了 commit，而是重新设置了 HEAD 和它指向的 branch。")])}],!1,null,null,null);e.default=a.exports}}]);